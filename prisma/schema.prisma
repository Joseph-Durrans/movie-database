// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// ERD Generator 
generator erd {
  provider = "prisma-erd-generator"
  theme    = "neutral"
}

// Datasource
datasource db {
  provider = "sqlite"
  url      = "file:./dev.sqlite"
}

// Cover
model Cover {
  id        Int      @id @default(autoincrement())
  url       String
  alt       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Movie     Movie[]
}

// Movies
model Movie {
  id              Int               @id @default(autoincrement())
  title           String
  releaseDate     DateTime?
  runtime         Int?
  overview        String?
  year            Int?
  budget          Int?
  revenue         Int?
  cover           Cover?            @relation(fields: [coverId], references: [id])
  coverId         Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  MovieGenre      MovieGenre[]
  MovieActor      MovieActor[]
  MovieDirector   MovieDirector[]
  MovieCrewMember MovieCrewMember[]
}

// Genres
model Genre {
  id         Int          @id @default(autoincrement())
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  MovieGenre MovieGenre[]
}

// Movies & Genres
model MovieGenre {
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   Int
  genre     Genre    @relation(fields: [genreId], references: [id])
  genreId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([movieId, genreId])
}

// Actors
model Actor {
  id         Int          @id @default(autoincrement())
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  MovieActor MovieActor[]
}

// Movies & Actors
model MovieActor {
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   Int
  actor     Actor    @relation(fields: [actorId], references: [id])
  actorId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([movieId, actorId])
}

// Directors
model Director {
  id            Int             @id @default(autoincrement())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  MovieDirector MovieDirector[]
}

// Movies & Directors
model MovieDirector {
  movie      Movie    @relation(fields: [movieId], references: [id])
  movieId    Int
  director   Director @relation(fields: [directorId], references: [id])
  directorId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@id([movieId, directorId])
}

// Crew Members
model CrewMember {
  id              Int               @id @default(autoincrement())
  name            String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  MovieCrewMember MovieCrewMember[]
}

// Movies & Crew Members
model MovieCrewMember {
  movie        Movie      @relation(fields: [movieId], references: [id])
  movieId      Int
  crewMember   CrewMember @relation(fields: [crewMemberId], references: [id])
  crewMemberId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([movieId, crewMemberId])
}
